# Quick test pipeline:
# 
# This pipeline checks that commits and pull requests don't
# introduce compiler errors. This is meant to be a quick and simple
# check that runs frequently.

# This pipeline triggers on commits to development and bug-fix
# branches. Commits to the main branch do not trigger this pipeline
# because those are tested by the build matrix. Commits to feature
# branches do not trigger this pipeline, but open pull requests and
# commits to pull requests do.
trigger:
  branches:
    include:
      - dev*
      - bugfix*
pr:
  branches:
    include:
      - '*'


# Basic agent and container set up
pool:
  vmImage: 'ubuntu-latest'
container: geoschem/buildmatrix:esmf_slim-openmpi3.1.4-ubuntu


# Pipeline definition for building GCHP
steps:
- checkout: self
  submodules: recursive
- script: |
    . /opt/spack/share/spack/setup-env.sh
    export CC=gcc
    export CXX=g++
    export FC=gfortran
    set -x
    spack load cmake
    spack load m4
    spack load mpi
    spack load hdf5 
    spack load netcdf-c
    spack load netcdf-fortran
    spack load esmf
    mkdir build
    cd build
    cmake $(Build.Repository.LocalPath) -DCMAKE_COLOR_MAKEFILE=FALSE -DRUNDIR=$(Build.Repository.LocalPath)/.ci-pipelines/MinimumStandaloneTransportTracer
    make -j install
  displayName: 'Building GCHP'
# - script: |
#     . /opt/spack/share/spack/setup-env.sh
#     spack load cmake
#     spack load m4
#     spack load mpi
#     spack load hdf5 
#     spack load netcdf-c
#     spack load netcdf-fortran
#     spack load esmf
#     cd $(Build.Repository.LocalPath)/.ci-pipelines/MinimumStandaloneTransportTracer
#     export OMPI_MCA_btl_vader_single_copy_mechanism=none
#     mpirun --oversubscribe -np 6 ./gchp
#     test -f OutputDir/GCHP.SpeciesConc.*.nc4
#   displayName: 'Run GCHP'